name: Android CI

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: 15

    - name: Apply Signing
      env:
        ALIAS: ${{ secrets.ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
        SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
        GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
      run: ./.github/apply_signing.sh

    - name: Build with Gradle
      run: ./gradlew spotlessCheck lintRelease bundleRelease assembleRelease --stacktrace

    - name: Upload build outputs
      uses: actions/upload-artifact@v2
      with:
        name: build-outputs
        path: ./app/build/outputs
        
    - name: Upload build reports
      uses: actions/upload-artifact@v2
      with:
        name: build-reports
        path: ./app/build/reports

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/github-script@v2
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          console.log('environment', process.versions);
      
          const fs = require('fs').promises;
      
          const { repo: { owner, repo }, sha } = context;
          console.log({ owner, repo, sha });

          const release = await github.repos.createRelease({
            owner, repo,
            tag_name: process.env.GITHUB_REF,
            prerelease: true
            target_commitish: sha
          });

          console.log('created release', { release });
  
          for (let file of await fs.readdir('build/release/signed')) {
            console.log('uploading', file);
            await github.repos.uploadReleaseAsset({
              owner, repo,
              release_id: release.data.id,
              name: file,
              data: await fs.readFile(`./${file}`)
            });            
          }


